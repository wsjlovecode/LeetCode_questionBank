给定一个 m × n 的网格和一个球。球的起始坐标为 (i,j) ，你可以将球移到相邻的单元格内，或者往上、下、左、右四个方向上移动使球穿过网格边界。但是，你最多可以移动 N 次。找出可以将球移出边界的路径数量。答案可能非常大，返回 结果 mod 109 + 7 的值。

 

示例 1：

输入: m = 2, n = 2, N = 2, i = 0, j = 0
输出: 6
解释:

示例 2：

输入: m = 1, n = 3, N = 3, i = 0, j = 1
输出: 12
解释:

 

说明:

    球一旦出界，就不能再被移动回网格内。
    网格的长度和高度在 [1,50] 的范围内。
    N 在 [0,50] 的范围内。


此题就是以前找路径的翻版，每走一步都是前一步的选择，可以使用DP，这里用到了记忆化操作
题解：
class Solution {
    public int findPaths(int m, int n, int N, int i, int j) {
        if(N==0) return 0;
        int mod = 1000000007;
        int[][] direct = {{1,0},{-1,0},{0,1},{0,-1}};
        int[][] dp = new int[m][n];
        for(int k=0;k<N;k++){
            int[][] tmp = new int[m][n];
            for(int x=0;x<m;x++){
                for(int y=0;y<n;y++){
                    for(int[] d: direct){
                        if(x+d[0]<0 || x+d[0]>=m || y+d[1]<0 || y+d[1]>=n){
                            tmp[x][y]++;
                        }else{
                            tmp[x][y] = (tmp[x][y]+dp[x+d[0]][y+d[1]])%mod;
                        }
                    }
                }
            }
            dp = tmp;
        }
        return dp[i][j];
    }
}

最初在一个记事本上只有一个字符 'A'。你每次可以对这个记事本进行两种操作：

    Copy All (复制全部) : 你可以复制这个记事本中的所有字符(部分的复制是不允许的)。
    Paste (粘贴) : 你可以粘贴你上一次复制的字符。

给定一个数字 n 。你需要使用最少的操作次数，在记事本中打印出恰好 n 个 'A'。输出能够打印出 n 个 'A' 的最少操作次数。

示例 1:

输入: 3
输出: 3
解释:
最初, 我们只有一个字符 'A'。
第 1 步, 我们使用 Copy All 操作。
第 2 步, 我们使用 Paste 操作来获得 'AA'。
第 3 步, 我们使用 Paste 操作来获得 'AAA'。


这道题的思路很清晰，状态转移方程：dp[i] = min(dp[i],dp[j]+1+(i-j)/j),dp[i]代表的是n=i时，用到的是最小操作数。
class Solution {
    public int minSteps(int n) {
        int[] dp = new int[n+1];
        for(int i=0;i<=n;++i) dp[i] = Integer.MAX_VALUE;
        dp[1] = 0;
        for(int i=2;i<=n;++i){
            for(int j=1;j<=i/2;++j){
                if(i%j==0){
                    dp[i] = Math.min(dp[i],dp[j]+1+(i-j)/j);
                }
            }
        }
        return dp[n];
    }
}

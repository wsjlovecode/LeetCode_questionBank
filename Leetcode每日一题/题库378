给定一个 n x n 矩阵，其中每行和每列元素均按升序排序，找到矩阵中第 k 小的元素。
请注意，它是排序后的第 k 小元素，而不是第 k 个不同的元素。

 

示例：

matrix = [
   [ 1,  5,  9],
   [10, 11, 13],
   [12, 13, 15]
],
k = 8,

返回 13。



题解：
#这道题使用的是二分法的方法，充分利用了矩阵的性质，但不容易想到
class Solution {
    public int kthSmallest(int[][] matrix, int k) {
        int n = matrix.length;
        int left=matrix[0][0];
        int right=matrix[n-1][n-1];
        while(left<right){
            int mid = left + ((right - left) >> 1);
            if(compare(matrix,mid,k,n)){
                right = mid;
            }
            else
                left = mid+1;
        }
        return left;
    }


    public boolean compare(int[][] matrix,int mid,int k,int n){
        int i=n-1;
        int j=0;
        int nums=0;
        while((i>=0)&&(j<n)){
            if(matrix[i][j]<=mid){
                nums += i+1;
                j++;
            }
            else{
                i--;
            }
        }
        return nums>=k;
    }
}

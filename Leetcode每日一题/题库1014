给定正整数数组 A，A[i] 表示第 i 个观光景点的评分，并且两个景点 i 和 j 之间的距离为 j - i。

一对景点（i < j）组成的观光组合的得分为（A[i] + A[j] + i - j）：景点的评分之和减去它们两者之间的距离。

返回一对观光景点能取得的最高分。

 

示例：

输入：[8,1,5,2,6]
输出：11
解释：i = 0, j = 2, A[i] + A[j] + i - j = 8 + 5 + 0 - 2 = 11


题解：
class Solution {
    public int maxScoreSightseeingPair(int[] A) {                                       //此题贪心法，关键步骤：将A[i]+A[j]+i-j分解为
        int maxValue=Integer.MIN_VALUE;                                                 //(A[i]+i)+(A[j]-j)，即找到这两个部分的最大值
        int left = A[0];                                                                //A[i]+i与A[j]+j可以同时进行更新维护
        for(int i=1;i<A.length;++i){
            maxValue = Math.max(maxValue,A[i]-i+left);
            left = Math.max(left,A[i]+i);
        }
        return maxValue;
    }
}

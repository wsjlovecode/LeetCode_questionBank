一条包含字母 A-Z 的消息通过以下方式进行了编码：

'A' -> 1
'B' -> 2
...
'Z' -> 26

给定一个只包含数字的非空字符串，请计算解码方法的总数。

示例 1:

输入: "12"
输出: 2
解释: 它可以解码为 "AB"（1 2）或者 "L"（12）。

示例 2:

输入: "226"
输出: 3
解释: 它可以解码为 "BZ" (2 26), "VF" (22 6), 或者 "BBF" (2 2 6) 。


题解：
// class Solution {
//     public int numDecodings(String s) {
//         int[] dp = new int[s.length()+1];
//         if(s.length()<=1) return s.length();
//         dp[0]=0;
//         dp[1]=1;
//         for(int i=2;i<=s.length();++i){
//             dp[i] = dp[i-1];
//             if((s.charAt(i-2) - '0')*10+(s.charAt(i-1) - '0') <= 26){
//                 dp[i] = dp[i] + 1;
//             }
//         }
//         return dp[s.length()];
//     }
// }


class Solution {
    public int numDecodings(String s) {
        int n = s.length();
        if (n == 0 || s.charAt(0) == '0')     return 0;
        int[] dp = new int [n + 1];
        dp[0] = 1;
        dp[1] = 1;
        for (int i = 2; i < n + 1; ++i) {
            if (s.charAt(i - 2) == '1' || s.charAt(i - 2) == '2' && s.charAt(i - 1) <= '6')
                dp[i] += dp[i - 2];
            if (s.charAt(i - 1) != '0')
                dp[i] += dp[i - 1]; 
        }
        return dp[n];
    }
}                                                                     //这道题注意边界条件，最简单的方法就是第二个方法
